basePath: /
definitions:
  models.User:
    properties:
      email:
        type: string
      password:
        type: string
      returnSecureToken:
        default: "true"
        type: string
    type: object
info:
  contact: {}
paths:
  /cocktail:
    put:
      consumes:
      - application/json
      description: Add IBA Cocktail
      parameters:
      - in: formData
        name: Garnish
        type: string
      - in: formData
        name: Id
        type: integer
      - in: formData
        name: Ingredients
        type: string
      - in: formData
        name: Method
        type: string
      - in: formData
        name: Name
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - AuthToken: []
      summary: Add Cocktail
  /cocktail/{id}:
    delete:
      consumes:
      - application/json
      description: Delete One IBA Cocktail
      parameters:
      - description: Id cocktail
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - AuthToken: []
      summary: Delete Cocktail by Id
    get:
      consumes:
      - application/json
      description: get one IBA Cocktail
      parameters:
      - description: Id cocktail
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - AuthToken: []
      summary: get Cocktail by Id
  /cocktails:
    get:
      consumes:
      - application/json
      description: List IBA Cocktails
      produces:
      - application/json
      responses: {}
      security:
      - AuthToken: []
      summary: List Cocktails
  /login:
    post:
      consumes:
      - application/json
      description: Request Login
      parameters:
      - description: User auth data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses: {}
      summary: Login
securityDefinitions:
  AuthToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
